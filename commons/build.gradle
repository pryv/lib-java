apply plugin: 'java'
apply plugin: 'jacoco'

ext {
    libraryName = 'Commons library'
    artifact = 'commons'
    libraryDescription = 'Common package shared among Java and Android specific libraries.'
}

group = publishedGroupId
version = libraryVersion

description = """com.pryv:lib"""

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "http://repo.maven.apache.org/maven2" }
}

configurations {
    testOutput
}

task copyTestResources(type: Copy, dependsOn: processTestResources) {
    from "${projectDir}/src/test/resources"
    into "${buildDir}/classes/test/resources"
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.3.3'
    compile group: 'uk.com.robust-it', name: 'cloning', version:'1.9.0'
    compile group: 'org.xerial', name: 'sqlite-jdbc', version:'3.7.2'
    compile group: 'com.jayway.awaitility', name: 'awaitility', version:'1.6.1'
    compile group: 'joda-time', name: 'joda-time', version:'2.4'
    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.1.2'
    testCompile group: 'junit', name: 'junit', version:'4.11'
    testCompile group: 'org.jacoco', name: 'jacoco-maven-plugin', version:'0.7.1.201405082137'
    compile 'commons-codec:commons-codec:1.2'
    testOutput sourceSets.test.output
}

// Task for fat jar generation (with all dependencies inside)
// Run 'gradlew fatJar', jar will be generated in build/libs
task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': libraryName,
                'Implementation-Version': libraryVersion
    }
    baseName = bintrayName + '-' + artifact + '-with-dependencies'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

apply from: '../jcenter.gradle'
apply from: '../bintray.gradle'